@* W przypadku korzystania z pakietów usuń tę sekcję *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Logowanie";

    // Zainicjuj ogólne zmienne strony
    var username = "";
    var userPassword = "";
    string title = "Logowanie";

    // Setup validation
    Validation.RequireField("username", "Musisz podać swój username.");
    Validation.RequireField("password", "Musisz określić hasło.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Hasło musi mieć co najmniej 6 znaków"));

    // Jeśli jest to żądanie POST, zweryfikuj dane i przetwórz je
    if (IsPost)
    {
        AntiForgery.Validate();
        username = Request.Form["username"];
        userPassword = Request.Form["password"];
        title = POST.Login(username, userPassword);
        if (POST.autoryzowany)
        {
            POST.autoryzowany = false;
            //rozpoczęcie sesji
            Session["username"] = username;
            Session["passwordAPI"] = "OstryZBaraninaNaC13nk1m!";
            //przekierowanie na stronę główną
            Response.AddHeader("REFRESH", "2;URL=../");
        }
    }


}


<div class="container">
    <div class="row">
        <div class="box">
            <div class="col-lg-12 text-center">

                <h2>@title</h2>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="box">
            <div class="col-lg-12 text-center">

                    <form class="form-horizontal" method="post">

                        @AntiForgery.GetHtml()
                        @* Jeśli występuje choć jeden błąd weryfikacji, pokaż błąd *@
                        @Html.ValidationSummary("Logowanie nie powiodło się. Popraw błędy i ponów próbę.", excludeFieldErrors: true, htmlAttributes: null)
                        <div class="form-group">
                            <label for="username" class="col-sm-2 control-label"></label>
                            <div class="col-sm-offset-2 col-sm-4 col-sm-offset-6">
                                <input type="text" id="username" name="username" class="form-control text-center"  placeholder="Username" value="@username" @Validation.For("username")/>
                            <p class="error">@Html.ValidationMessage("username")</p>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="userPassword" class="col-sm-2 control-label"></label>
                            <div class="col-sm-offset-2 col-sm-4 col-sm-offset-6">
                                <input type="password" class="form-control text-center" placeholder="Hasło" id="password" name="password" @Validation.For("password")/>                           
                                <p class="error">@Html.ValidationMessage("password")</p>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-6 col-md-offset-3">
                                <button type="submit" class="btn btn-default">Zaloguj się</button>
                            </div>
                        </div>
                    </form>

            </div>
        </div>
    </div>
</div>
